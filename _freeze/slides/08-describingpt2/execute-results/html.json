{
  "hash": "604e78b5cdee67afc0b0a2e3394fc139",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Describing data: part 2\"\nsubtitle: \"Lecture 8\"\ndate: \"May 29, 2024\"\nformat: revealjs\n---\n\n\n\n\n## Logistics {.smaller}\n\n-   Project proposals\n\n    -   I will get my feedback to you soon--will be posted as a github issue\n\n. . .\n\n-   Project descriptive statistics\n\n    -   Due **Thursday June 6**. Instructions are up; template and example to come this afternoon.\n\n## Today\n\n-   Finish univariate summaries\n-   Preparing data frames\n\n# Where we left off: summarizing numeric variables\n\n## Summarizing a distribution {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n::: incremental\n-   Center\n\n    -   median(dataset\\$var, na.rm = TRUE)\n    -   mean(dataset\\$var, na.rm = TRUE)\n\n-   Spread\n\n    -   quantile(dataset\\$var, na.rm = TRUE)\n    -   sd(dataset\\$var, na.rm = TRUE)\n\n-   (Almost) everything\n\n    -   summary(dataset\\$var)\n:::\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](08-describingpt2_files/figure-revealjs/unnamed-chunk-2-1.png){width=480}\n:::\n:::\n\n:::\n:::\n\n## Exercise question 2 {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(acs12)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2,000\nColumns: 13\n$ income       <int> 60000, 0, NA, 0, 0, 1700, NA, NA, NA, 45000, NA, 8600, 0,…\n$ employment   <fct> not in labor force, not in labor force, NA, not in labor …\n$ hrs_work     <int> 40, NA, NA, NA, NA, 40, NA, NA, NA, 84, NA, 23, NA, NA, N…\n$ race         <fct> white, white, white, white, white, other, white, other, a…\n$ age          <int> 68, 88, 12, 17, 77, 35, 11, 7, 6, 27, 8, 69, 69, 17, 10, …\n$ gender       <fct> female, male, female, male, female, female, male, male, m…\n$ citizen      <fct> yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, ye…\n$ time_to_work <int> NA, NA, NA, NA, NA, 15, NA, NA, NA, 40, NA, 5, NA, NA, NA…\n$ lang         <fct> english, english, english, other, other, other, english, …\n$ married      <fct> no, no, no, no, no, yes, no, no, no, yes, no, no, yes, no…\n$ edu          <fct> college, hs or lower, hs or lower, hs or lower, hs or low…\n$ disability   <fct> no, yes, no, no, yes, yes, no, yes, no, no, no, no, yes, …\n$ birth_qrtr   <fct> jul thru sep, jan thru mar, oct thru dec, oct thru dec, j…\n```\n\n\n:::\n:::\n\n\n## Question 2 solutions {.smaller}\n\nWhat is the mean of `hrs_work`? What is the median? (there are two ways to get this info)\n\n::: fragment\nApproach 1:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(acs12$hrs_work, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 37.97706\n```\n\n\n:::\n\n```{.r .cell-code}\nmedian(acs12$hrs_work, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 40\n```\n\n\n:::\n:::\n\n:::\n\n::: fragment\nApproach 2:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(acs12$hrs_work)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n   1.00   32.00   40.00   37.98   40.00   99.00    1041 \n```\n\n\n:::\n:::\n\n:::\n\n## Question 2 solutions {.smaller}\n\nWhat is the standard deviation of `hrs_work`?\n\n::: fragment\n\n::: {.cell}\n\n```{.r .cell-code}\nsd(acs12$hrs_work, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 13.49768\n```\n\n\n:::\n:::\n\n:::\n\n## Question 2 solutions {.smaller}\n\nWhat proportion of people in the data set are missing information (have NAs) for this variable? (there are many ways to do this)\n\n::: fragment\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find the number of NA values\nsummary(acs12$hrs_work)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n   1.00   32.00   40.00   37.98   40.00   99.00    1041 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find the total number of observations\nglimpse(acs12)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2,000\nColumns: 13\n$ income       <int> 60000, 0, NA, 0, 0, 1700, NA, NA, NA, 45000, NA, 8600, 0,…\n$ employment   <fct> not in labor force, not in labor force, NA, not in labor …\n$ hrs_work     <int> 40, NA, NA, NA, NA, 40, NA, NA, NA, 84, NA, 23, NA, NA, N…\n$ race         <fct> white, white, white, white, white, other, white, other, a…\n$ age          <int> 68, 88, 12, 17, 77, 35, 11, 7, 6, 27, 8, 69, 69, 17, 10, …\n$ gender       <fct> female, male, female, male, female, female, male, male, m…\n$ citizen      <fct> yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, ye…\n$ time_to_work <int> NA, NA, NA, NA, NA, 15, NA, NA, NA, 40, NA, 5, NA, NA, NA…\n$ lang         <fct> english, english, english, other, other, other, english, …\n$ married      <fct> no, no, no, no, no, yes, no, no, no, yes, no, no, yes, no…\n$ edu          <fct> college, hs or lower, hs or lower, hs or lower, hs or low…\n$ disability   <fct> no, yes, no, no, yes, yes, no, yes, no, no, no, no, yes, …\n$ birth_qrtr   <fct> jul thru sep, jan thru mar, oct thru dec, oct thru dec, j…\n```\n\n\n:::\n:::\n\n:::\n\n## Question 2 solutions\n\n::: fragment\nNow that we have those values, we can use R to do the math\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Divide!\n1041/2000\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.5205\n```\n\n\n:::\n:::\n\n:::\n\n## Shape\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](08-describingpt2_files/figure-revealjs/unnamed-chunk-10-1.png){width=480}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](08-describingpt2_files/figure-revealjs/unnamed-chunk-11-1.png){width=480}\n:::\n:::\n\n:::\n:::\n\n## Shape\n\n-   We'll go over how to make plots later\n-   But summary statistics tell you things about shape too\n\n## Skew\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](08-describingpt2_files/figure-revealjs/unnamed-chunk-12-1.png){width=480}\n:::\n:::\n\n\nRight-skewed data\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](08-describingpt2_files/figure-revealjs/unnamed-chunk-13-1.png){width=480}\n:::\n:::\n\n\nLeft-skewed data\n:::\n:::\n\n## Skew\n\n-   Extreme values influence the mean more than the median\n-   When mean is higher than median: data might be skewed right (and vice versa)\n\n## Example: American Community Survey commute time\n\ntime_to_work: Travel time to work, in minutes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean_commute <- mean(acs12$time_to_work, na.rm = TRUE)\nmedian_commute <- median(acs12$time_to_work, na.rm = TRUE)\n```\n:::\n\n\n::: fragment\n\n::: {.cell}\n\n```{.r .cell-code}\nmean_commute\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 25.99745\n```\n\n\n:::\n:::\n\n:::\n\n::: fragment\n\n::: {.cell}\n\n```{.r .cell-code}\nmedian_commute\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 20\n```\n\n\n:::\n:::\n\n:::\n\n## Example: American Community Survey commute time\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](08-describingpt2_files/figure-revealjs/unnamed-chunk-17-1.png){width=960}\n:::\n:::\n\n\n## Shape: Quartiles\n\n-   Location of quartiles also tells you something about shape\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(acs12$time_to_work)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n      1      10      20      26      30     163    1217 \n```\n\n\n:::\n:::\n\n\n## Review {.smaller}\n\n-   Categorical data: look at the available categories and how many observations are in each category\n\n    -   `unique(dataframe$variable)`\n    -   `table(dataframe$variable, useNA = \"always\")`\n    -   `table(dataframe$variable1, dataframe$variable2, useNA = \"always\")`\n\n## Review {.smaller}\n\n-   Numeric data: Look at summary statistics that tell you something about the distribution\n    -   `summary(dataframe$variable)`\n    -   `sd(dataframe$variable, na.rm = TRUE)`\n\n# Modifying data frames\n\n## Removing observations\n\n::: incremental\n-   You may not be interested in all observations\n\n-   Example:\n\n    -   RQ: How is commute time related to hours worked?\n:::\n\n## Removing observations {.smaller}\n\n-   How is commute time related to hours worked?\n-   Data: ACS 2012\n\n::: fragment\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(acs12)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2,000\nColumns: 13\n$ income       <int> 60000, 0, NA, 0, 0, 1700, NA, NA, NA, 45000, NA, 8600, 0,…\n$ employment   <fct> not in labor force, not in labor force, NA, not in labor …\n$ hrs_work     <int> 40, NA, NA, NA, NA, 40, NA, NA, NA, 84, NA, 23, NA, NA, N…\n$ race         <fct> white, white, white, white, white, other, white, other, a…\n$ age          <int> 68, 88, 12, 17, 77, 35, 11, 7, 6, 27, 8, 69, 69, 17, 10, …\n$ gender       <fct> female, male, female, male, female, female, male, male, m…\n$ citizen      <fct> yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, ye…\n$ time_to_work <int> NA, NA, NA, NA, NA, 15, NA, NA, NA, 40, NA, 5, NA, NA, NA…\n$ lang         <fct> english, english, english, other, other, other, english, …\n$ married      <fct> no, no, no, no, no, yes, no, no, no, yes, no, no, yes, no…\n$ edu          <fct> college, hs or lower, hs or lower, hs or lower, hs or low…\n$ disability   <fct> no, yes, no, no, yes, yes, no, yes, no, no, no, no, yes, …\n$ birth_qrtr   <fct> jul thru sep, jan thru mar, oct thru dec, oct thru dec, j…\n```\n\n\n:::\n:::\n\n:::\n\n::: fragment\n```         \n-   Need to remove people who are unemployed/not in labor force (and don't have a job or a commute!)\n```\n:::\n\n## Removing observations {.smaller}\n\n::: incremental\n-   How? With `filter()`\n-   `filter(dataframe, condition)`\n:::\n\n::: fragment\n\n::: {.cell}\n\n```{.r .cell-code}\nacs12_employedonly <- filter(acs12, employment == \"employed\")\n```\n:::\n\n:::\n\n::: fragment\n-   Did it work? Check with `table()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(acs12_employedonly$employment, useNA = \"always\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nnot in labor force         unemployed           employed               <NA> \n                 0                  0                843                  0 \n```\n\n\n:::\n:::\n\n:::\n\n## Conditions {.smaller}\n\n::: incremental\n-   `filter(acs12, employment == \"employed\")`\n-   condition: `employment == \"employed\"`\n-   This specifies which observations you want to *keep*\n:::\n\n::: fragment\n-   Common comparison operators:\n    -   `==` : equal to (note there are two equals signs!)\n    -   `!=` : not equal to\n    -   `>`, `>=` : greater than, greater than or equal to\n    -   `<`, `<=` : less than, less than or equal to\n:::\n\n::: fragment\n-   Values:\n\n    -   Can be numbers, letters/words, or TRUE/FALSE--should match the response options of your variable\n    -   Put letters/words in quotation marks\n:::\n\n## Condition examples {.smaller}\n\n::: incremental\n-   `filter(acs12, citizen == \"no\")`\n-   `filter(acs12, income <= 12000)`\n-   `filter(acs12, birth_qrtr != \"jan thru mar\")`\n-   `filter(acs12, hrs_work > 20)`\n:::\n\n## Other useful condition operators {.smaller}\n\n::: incremental\n-   Two or more requirements\n\n    -   `&` : and\n\n    -   `|` : or\n\n    -   `filter(acs12, citizen == \"no\" & lang == \"english\")`\n\n    -   `filter(acs12, race == \"black\" | race == \"asian\")`\n\n-   Missing values\n\n    -   `is.na()`\n\n    -   `!is.na()`\n\n        -   is *not* missing -- good for removing rows with missing values\n\n    -   `filter(acs12, !is.na(income))`\n\n-   More: [Click here for R for Data Science](https://r4ds.had.co.nz/transform.html#filter-rows-with-filter)\n:::\n\n## Common mistakes and error messages {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(acs12, employment = \"employed\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in `filter()`:\n! We detected a named input.\nℹ This usually means that you've used `=` instead of `==`.\nℹ Did you mean `employment == \"employed\"`?\n```\n\n\n:::\n:::\n\n\n## Common mistakes and error messages {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(acs12, employment == employed)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in `filter()`:\nℹ In argument: `employment == employed`.\nCaused by error:\n! object 'employed' not found\n```\n\n\n:::\n:::\n\n\n## Common mistakes and error messages {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(acs12, employment == \"employd\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 13\n# ℹ 13 variables: income <int>, employment <fct>, hrs_work <int>, race <fct>,\n#   age <int>, gender <fct>, citizen <fct>, time_to_work <int>, lang <fct>,\n#   married <fct>, edu <fct>, disability <fct>, birth_qrtr <fct>\n```\n\n\n:::\n:::\n\n\n## Common mistakes and error messages {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(acs12, employment == \"Employed\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 13\n# ℹ 13 variables: income <int>, employment <fct>, hrs_work <int>, race <fct>,\n#   age <int>, gender <fct>, citizen <fct>, time_to_work <int>, lang <fct>,\n#   married <fct>, edu <fct>, disability <fct>, birth_qrtr <fct>\n```\n\n\n:::\n:::\n\n\n## Exercise: Filtering\n\n-   Clone and open the project repo now (**ex-5-31-yourusername**)\n\n-   Then open the .qmd file and try out some filtering\n\n    -   [Instructions: Computing -\\> Cloning and committing](https://soc333-sum23.github.io/computing-clonerepo.html)\n",
    "supporting": [
      "08-describingpt2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}