{
  "hash": "7f85c822dd2c2295d261aa5ed7c57686",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Describing data: part 4\"\nsubtitle: \"Lecture 10\"\ndate: \"June 3, 2024\"\nformat: revealjs\nsmaller: true\n---\n\n\n\n\n## Logistics {.smaller}\n\n-   Project component 2: descriptive statistics\n\n    -   All materials are posted (instructions, example, github repos)\n    -   Due **Thursday June 6** 11:59pm\n    -   We have covered everything for parts 1-3. Part 4 is today and tomorrow.\n    -   Grades/feedback coming this afternoon!\n\n## Today {.smaller}\n\n-   Answers to filtering\n-   Pipes\n-   Working on creating variables\n\n## Filtering exercise (ex-5-29): answers! {.smaller}\n\n-   Find this on your computer (no need to clone it again)\n\n## Stringing commands together with pipes (`|>`)\n\n::: incremental\n-   Often we need to change data frames in more than one way\n-   Example from last week: How does employment status vary by age category?\n-   We need to create an age category variable (as we talked about Thursday)\n-   But we probably want to filter too--why analyze kids?\n:::\n\n## Stringing commands together: approach 1\n\nWe can do this with the tools we have.\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# first we make the new variable\nacs12_newagevar <- mutate(acs12, agecat = case_when(age < 14 ~ \"child\",\n                                                    age < 18 ~ \"teen\",\n                                                    age < 67 ~ \"adult\",\n                                                    TRUE ~ \"retired\"))\n\n# then we filter to remove children\nacs12_nokids <- filter(acs12_newagevar, agecat != \"child\")\n\n# did it work?\ntable(acs12_nokids$agecat, useNA = \"always\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  adult retired    teen    <NA> \n   1264     297      89       0 \n```\n\n\n:::\n:::\n\n\n. . .\n\n-   But it's kind of ugly... we don't need to save that middle step\n\n## Stringing commands together: approach 2, with `|>`\n\n::: incremental\n-   The pipe operator, `|>`, lets us pass the result of one function directly into another one\n-   The `|` symbol is the key below \"delete\" on your keyboard (not I, not l, not 1)\n-   It replaces the first mutate/filter argument (the dataset)\n-   \"Take the thing that came before this and give it to the function that comes after this\"\n:::\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacs12_nokids <- acs12 |> # start with acs12\n  mutate(agecat = case_when(age < 14 ~ \"child\", #then add a new variable to it\n                            age < 18 ~ \"teen\",\n                            age < 67 ~ \"adult\",\n                            TRUE ~ \"retired\")) |> \n  filter(agecat != \"child\") # then filter out the kids\n\ntable(acs12_nokids$agecat, useNA = \"always\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  adult retired    teen    <NA> \n   1264     297      89       0 \n```\n\n\n:::\n:::\n\n\n## Another `|>` example\n\n-   This:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmutate(acs12, agecat = case_when(age < 14 ~ \"child\",\n                                 age < 18 ~ \"teen\",\n                                 age < 67 ~ \"adult\",\n                                 TRUE ~ \"retired\"))\n```\n:::\n\n\n-   Is the same as this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacs12 |> \n  mutate(agecat = case_when(age < 14 ~ \"child\",\n                            age < 18 ~ \"teen\",\n                            age < 67 ~ \"adult\",\n                            TRUE ~ \"retired\"))\n```\n:::\n\n\n## More on `|>`\n\n::: incremental\n-   We're just scratching the surface in this class\n\n-   When you need to clean your data or when your analyses are more complex, `|>` makes your life a lot easier!\n\n-   Sometimes in internet resources more than \\~2 years old, you'll see `%>%` instead--this older version does exactly the same thing\n\n-   Annoying to type out? There's a keyboard shortcut\n\n    -   on mac, command-shift-M\n    -   on pc, ctrl-shift-M\n:::\n\n## Continuing on creating new variables {.smaller}\n\n-   Find your exercise from last Thursday (ex-5-30)\n\n    -   No need to clone it again; find where it's saved on your computer\n\n-   10-15 minutes to work\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}