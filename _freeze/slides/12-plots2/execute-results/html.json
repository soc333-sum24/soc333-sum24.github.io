{
  "hash": "f29c66d48539fefe80ebd0bb36b2e7ba",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Plotting relationships between variables\"\nsubtitle: \"Lecture 12\"\ndate: \"June 5, 2024\"\nformat: revealjs\nsmaller: true\n---\n\n\n\n\n## Logistics {.smaller}\n\n-   Project component 2, descriptive statistics, due tomorrow 11:59pm\n-   I recommend trying all parts today and coming tomorrow with questions\n-   Tomorrow we will start on hypothesis testing\n\n## Today {.smaller}\n\n-   Single variable plots\n-   Factors\n-   Multivariate plots\n\n## Single variable plots: review\n\n-   Let's look at this Youth Risk Behavior Surveillance System data again.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(yrbss)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 13,583\nColumns: 13\n$ age                      <int> 14, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 1…\n$ gender                   <chr> \"female\", \"female\", \"female\", \"female\", \"fema…\n$ grade                    <chr> \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", …\n$ hispanic                 <chr> \"not\", \"not\", \"hispanic\", \"not\", \"not\", \"not\"…\n$ race                     <chr> \"Black or African American\", \"Black or Africa…\n$ height                   <dbl> NA, NA, 1.73, 1.60, 1.50, 1.57, 1.65, 1.88, 1…\n$ weight                   <dbl> NA, NA, 84.37, 55.79, 46.72, 67.13, 131.54, 7…\n$ helmet_12m               <chr> \"never\", \"never\", \"never\", \"never\", \"did not …\n$ text_while_driving_30d   <chr> \"0\", NA, \"30\", \"0\", \"did not drive\", \"did not…\n$ physically_active_7d     <int> 4, 2, 7, 0, 2, 1, 4, 4, 5, 0, 0, 0, 4, 7, 7, …\n$ hours_tv_per_school_day  <chr> \"5+\", \"5+\", \"5+\", \"2\", \"3\", \"5+\", \"5+\", \"5+\",…\n$ strength_training_7d     <int> 0, 0, 0, 0, 1, 0, 2, 0, 3, 0, 3, 0, 0, 7, 7, …\n$ school_night_hours_sleep <chr> \"8\", \"6\", \"<5\", \"6\", \"9\", \"8\", \"9\", \"6\", \"<5\"…\n```\n\n\n:::\n:::\n\n\n## Single variable plots\n\n-   How often did respondents say they wore their bike helmets in the past twelve months?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(yrbss$helmet_12m)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n      always did not ride most of time        never       rarely    sometimes \n         399         4549          293         6977          713          341 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = yrbss, aes(x = helmet_12m)) + \n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](12-plots2_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n# Factors\n\n## Factors\n\n-   Remember our bar plot of helmet wearing habits from the exercise:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = yrbss, aes(x = helmet_12m)) + \n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](12-plots2_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n## Factors\n\n-   Categorical variables (those where the values are words/letters/numbers in quotation marks) default to being ordered alphabetically\n\n::: columns\n::: {.column width=\"80%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](12-plots2_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n:::\n\n::: {.column width=\"20%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(yrbss)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 13,583\nColumns: 13\n$ age                      <int> 14, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 1…\n$ gender                   <chr> \"female\", \"female\", \"female\", \"female\", \"fema…\n$ grade                    <chr> \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", …\n$ hispanic                 <chr> \"not\", \"not\", \"hispanic\", \"not\", \"not\", \"not\"…\n$ race                     <chr> \"Black or African American\", \"Black or Africa…\n$ height                   <dbl> NA, NA, 1.73, 1.60, 1.50, 1.57, 1.65, 1.88, 1…\n$ weight                   <dbl> NA, NA, 84.37, 55.79, 46.72, 67.13, 131.54, 7…\n$ helmet_12m               <chr> \"never\", \"never\", \"never\", \"never\", \"did not …\n$ text_while_driving_30d   <chr> \"0\", NA, \"30\", \"0\", \"did not drive\", \"did not…\n$ physically_active_7d     <int> 4, 2, 7, 0, 2, 1, 4, 4, 5, 0, 0, 0, 4, 7, 7, …\n$ hours_tv_per_school_day  <chr> \"5+\", \"5+\", \"5+\", \"2\", \"3\", \"5+\", \"5+\", \"5+\",…\n$ strength_training_7d     <int> 0, 0, 0, 0, 1, 0, 2, 0, 3, 0, 3, 0, 0, 7, 7, …\n$ school_night_hours_sleep <chr> \"8\", \"6\", \"<5\", \"6\", \"9\", \"8\", \"9\", \"6\", \"<5\"…\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## Factors\n\n-   But we can change that!\n-   *Factors* are a specific type of R object. They are categorical with response options that are represented by words/letters/numbers in quotation marks, but they allow you to assign those options any order you'd like.\n-   Useful for ordinal variables\n-   To change the order of the bars, we change the order of the response options in the data set before we plot.\n\n## Factors\n\n-   We can use `mutate()` with a new function, `factor()`, for this.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(yrbss$helmet_12m, useNA = \"always\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n      always did not ride most of time        never       rarely    sometimes \n         399         4549          293         6977          713          341 \n        <NA> \n         311 \n```\n\n\n:::\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyrbss_reordered <- mutate(yrbss,\n                          # we are turning our helmet variable into a factor\n                          # its name will remain the same (the new variable \n                          # we create will overwrite the old one)\n                          helmet_12m = factor(\n                            helmet_12m, \n                            # and we want its response options to be in this order\n                            # least to greatest frequency\n                            levels = c(\"did not ride\", \"never\", \"rarely\", \n                                       \"sometimes\", \"most of time\", \"always\")))\n\ntable(yrbss_reordered$helmet_12m)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\ndid not ride        never       rarely    sometimes most of time       always \n        4549         6977          713          341          293          399 \n```\n\n\n:::\n:::\n\n\n## Factors\n\n::: columns\n::: {.column width=\"20%\"}\n-   Our new plot! I've added better labels as well.\n-   What is easier to see in this plot than the old one?\n-   Does the pattern surprise you?\n:::\n\n::: {.column width=\"80%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = yrbss_reordered, aes(x = helmet_12m)) + \n  geom_bar() + \n  labs(x = \"How frequently did you wear a helmet while riding your bike?\",\n       y = \"Number of students\",\n       title = \"Distribution of reported helmet wearing in the last 12 months\")\n```\n\n::: {.cell-output-display}\n![](12-plots2_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n# Multivariate plots\n\n## Plots for relationships between variables {.smaller}\n\n-   Plots are an excellent tool for looking at the relationships between variables.\n-   The same structure applies for plotting two/three/four/etc variables as one variable.\n-   What's different? Some new function options, some new geoms.\n\n## Types of plots for different combinations of variables: overview\n\n-   One numeric variable\n\n    -   Histogram, `geom_histogram()`\n\n-   One categorical variable\n\n    -   Bar chart, `geom_bar()`\n\n. . .\n\n-   Two numeric variables\n\n    -   Scatterplots, `geom_point()`\n\n-   One numeric and one categorical variable\n\n    -   Boxplots, `geom_boxplot()`\n\n-   Two categorical variables\n\n    -   Bar chart with color or facets\n\n## What about three or more variables?\n\n-   Start with your main explanatory variable and main response variable and make a two variable plot\n\n. . .\n\n-   Adding an additional categorical variable\n\n    -   Can you add color (one per category)?\n    -   Can you break a big plot into several small plots (facets)?\n\n. . .\n\n-   Adding an additional numeric variable\n\n    -   Can you add color (along a gradient)?\n    -   Can you add size?\n\n## Adding variables in ggplot\n\n-   `aes()` (aesthetics) is where we tell R what variables we want represented by what plot elements\n\n-   For example:\n\n    -   `ggplot(acs12, aes(x = income))`\n\n    -   `ggplot(acs12, aes(x = income, y = married))`\n\n    -   `ggplot(acs12, aes(x = income, y = married, color = gender))`\n\n    -   `ggplot(acs12, aes(x = time_to_work, y = lang, size = income))`\n\n    -   `ggplot(acs12, aes(x = time_to_work, y = lang, color = income))`\n\n## Bar charts for two categorical variables\n\n-   RQ: How do reported rates of texting while driving vary by gender? (in `yrbss`)\n\n-   We can use color!\n\n    -   `color` (for lines and points) and `fill` (for filling in areas like bars) are the arguments we use inside `aes()` to add color.\n\n::: columns\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\n# if I don't know what variables to look at, I can use glimpse()\nglimpse(yrbss)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 13,583\nColumns: 13\n$ age                      <int> 14, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 1…\n$ gender                   <chr> \"female\", \"female\", \"female\", \"female\", \"fema…\n$ grade                    <chr> \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", …\n$ hispanic                 <chr> \"not\", \"not\", \"hispanic\", \"not\", \"not\", \"not\"…\n$ race                     <chr> \"Black or African American\", \"Black or Africa…\n$ height                   <dbl> NA, NA, 1.73, 1.60, 1.50, 1.57, 1.65, 1.88, 1…\n$ weight                   <dbl> NA, NA, 84.37, 55.79, 46.72, 67.13, 131.54, 7…\n$ helmet_12m               <chr> \"never\", \"never\", \"never\", \"never\", \"did not …\n$ text_while_driving_30d   <chr> \"0\", NA, \"30\", \"0\", \"did not drive\", \"did not…\n$ physically_active_7d     <int> 4, 2, 7, 0, 2, 1, 4, 4, 5, 0, 0, 0, 4, 7, 7, …\n$ hours_tv_per_school_day  <chr> \"5+\", \"5+\", \"5+\", \"2\", \"3\", \"5+\", \"5+\", \"5+\",…\n$ strength_training_7d     <int> 0, 0, 0, 0, 1, 0, 2, 0, 3, 0, 3, 0, 0, 7, 7, …\n$ school_night_hours_sleep <chr> \"8\", \"6\", \"<5\", \"6\", \"9\", \"8\", \"9\", \"6\", \"<5\"…\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"40%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\n# this will give me the response options\ntable(yrbss$text_while_driving_30d, \n      yrbss$gender, \n      useNA = \"always\") \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n               \n                female male <NA>\n  0               2254 2534    4\n  1-2              438  487    0\n  10-19            154  219    0\n  20-29            124  174    0\n  3-5              208  282    3\n  30               358  467    2\n  6-9              140  171    0\n  did not drive   2485 2159    2\n  <NA>             460  457    1\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## Bar charts for two categorical variables\n\n-   `fill = gender` is the argument we want for bar color (an area rather than a point or line)\n-   This is an okay start, but it's not super obvious yet what the story is\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyrbss |> \n  filter(!is.na(gender) & !is.na(text_while_driving_30d)) |> # remove missing data\n  mutate(text_while_driving_30d = factor(text_while_driving_30d, # change the order of the bars\n                                         levels = c(\"did not drive\", \"0\", \"1-2\", \"3-5\", \n                                                    \"6-9\", \"10-19\", \"20-29\", \"30\"))) |> \n  # we add the fill argument here with the variable we want the fill color to represent.\n  ggplot(aes(x = text_while_driving_30d, fill = gender)) + \n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](12-plots2_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n# Bar charts for two categorical variables\n\n-   We can set the bars to be next to one another rather than stacked with the `position = \"dodge\"` argument to `geom_bar()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyrbss |> \n  filter(!is.na(gender) & !is.na(text_while_driving_30d)) |>\n  mutate(text_while_driving_30d = factor(text_while_driving_30d,\n                                         levels = c(\"did not drive\", \"0\", \"1-2\", \"3-5\", \n                                                    \"6-9\", \"10-19\", \"20-29\", \"30\"))) |> \n  ggplot(aes(x = text_while_driving_30d, fill = gender)) + \n  geom_bar(position = \"dodge\") + \n  labs(x = \"Number of days last month respondent texted while driving\",\n       y = \"\",\n       # I can change the label on other aes features just like on axes--this goes above the legend\n       fill = \"Sex\")\n```\n:::\n\n\n## Bar charts for two categorical variables\n\n-   Here the story is clearer!\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](12-plots2_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n## New plots for two variables: scatter plots and boxplots {.smaller}\n\n-   Scatter plots show the relationship between two numeric variables\n-   Explanatory (independent) variable on the x axis, response (dependent) variable on the y axis\n\n## Scatter plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(acs12, aes(x = time_to_work, y = hrs_work)) + # we specify x and y axis variables here\n  geom_point() + # and this tells R we want a scatter plot\n  labs(x = \"Commute time (minutes)\",\n       y = \"Hours worked per week\")\n```\n\n::: {.cell-output-display}\n![](12-plots2_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n\n## Scatter plot with color {.smaller}\n\n-   What if we wanted to add a third variable? How about gender?\n-   One option is to use color\n\n## Scatter plot with color\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# This code is nearly identical to the last plot--we just add one argument to aes!\nggplot(acs12, \n       aes(x = time_to_work, \n           y = hrs_work,\n           color = gender)) + \n  geom_point() +\n  labs(x = \"Commute time (minutes)\",\n       y = \"Hours worked per week\")\n```\n\n::: {.cell-output-display}\n![](12-plots2_files/figure-revealjs/unnamed-chunk-17-1.png){width=960}\n:::\n:::\n\n\n## Box plots\n\n-   Box plots are good for showing the median, quartiles, outliers, and range of a variable.\n-   You can plot a single numeric variable using a boxplot, but they're most useful for comparing the distribution of a numeric variable across different groups represented by a categorical variable.\n\n![](images/12/boxplotanatomy.png)\n\n::: aside\nImage from https://www.data-to-viz.com/caveat/boxplot.html\n:::\n\n## Box plots and distributions: exercise\n\n![](images/12/histograms_boxplots.png)\n\n## Box plots\n\n-   Example: How does the number of hours worked per week vary by education level?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(acs12, aes(x = hrs_work, y = edu)) + \n  geom_boxplot() # this gives us our boxplot\n```\n\n::: {.cell-output-display}\n![](12-plots2_files/figure-revealjs/unnamed-chunk-18-1.png){width=960}\n:::\n:::\n\n\n## Three variables: Adding color to our boxplot\n\n-   RQ: Among people who report being employed, how does the relationship between education level and number of hours worked per week vary by ability status?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacs12 |> # we start with the acs\n  filter(employment == \"employed\") |> # first we filter out people who are not employed\n  ggplot(aes(x = hrs_work, y = edu, color = disability)) + # this part is the same; we just add the color argument!\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](12-plots2_files/figure-revealjs/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n\n\n## My expectations for your plots\n\n-   Make plots that are interpretable\n\n    -   Choose plot types that are appropriate to your variables\n    -   Use useful labels\n\n. . .\n\n-   Do they have to be pretty?\n\n    -   No. Ugly but interpretable is fine.\n    -   BUT, R is really good at making beautiful graphics--and if you'd like to learn more about how to do that, I'm happy to help!\n\n## Additional resources for plotting\n\n-   Check out the [R Graph Gallery](https://r-graph-gallery.com/index.html)\n\n    -   This walks through different kinds of plots and their strengths and weaknesses. It includes lots of example code.\n    -   There are lots of resources here for making plots both more interpretable and more beautiful!\n\n-   If this interests you, I recommend:\n\n    -   [Soc 232: Visualizing Social Data](https://visualizingsociety.com/), taught by Dr. Kieran Healy\n\n        -   or, Dr. Healy's book, [Data Visualization: A Practical Introduction](https://socviz.co/)\n\n    -   [Stat 313: Advanced Data Visualization](https://mine-cr.com/teaching/sta313/), taught by Dr. Mine Çetinkaya-Rundel\n\n    -   Soc 223: Data Analytics and Visualization for Business, taught by Dr. Stephen Vaisey\n\n## Steps to make a plot for your project\n\n-   Step 1: Identify the variables you want to plot and figure out if they're numeric or categorical\n\n    -   Watch out for variables that are *theoretically* numeric but treated in R as categorical (like the texting while driving variable above)\n\n-   Step 2: Choose a plot type that fits your variables and question\n\n    -   Sketch it out! Figure out what it should look like in your head before you jump into R.\n    -   What should each axis represent? Do you need color or something else in order to include all your variables?\n\n-   Step 3: Look for resources. Find the relevant code in the slides and read the [R Graph Gallery's](https://r-graph-gallery.com/index.html) information about your plot type.\n\n-   Step 4: Make the super simple version\n\n-   Step 5: Refine it to make it more interpretable\n\n    -   My expectation: add labels and drop NA values if necessary\n\n## For tomorrow {.smaller}\n\n-   No exercise on multivariate plots\n-   Try out part 4 of your project instead! Come tomorrow with questions.\n",
    "supporting": [
      "12-plots2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}