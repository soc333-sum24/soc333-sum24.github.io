{
  "hash": "6a9a92d116488491b8e15d99e097ee62",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hypothesis tests pt 4\"\nsubtitle: \"Lecture 16\"\ndate: \"June 12, 2024\"\nformat: \n  revealjs:\n    smaller: true\n---\n\n\n\n\n## Logistics {.smaller}\n\n. . .\n\n-   Grades are up to date\n\n    -   Feedback via email\n    -   Check your feedback---you'll revise what you did and use it in the final paper\n    -   I'm available to meet after class or by appointment!\n\n. . .\n\n-   Project component 3, results: draft by tomorrow (June 13), submit for grading by next Monday (June 17)\n\n    -   Instructions are on the website\n    -   Drafts should be complete--meaning you attempted all parts\n    -   Commit your changes and push to GitHub!\n\n## Today {.smaller}\n\n-   A note on bar charts for proportions\n-   Review yesterday's exercise\n-   Specifics of particular hypothesis tests\n\n## Bar charts for two categorical variables\n\n-   Example: How is the probability of obtaining a college degree related to self-identified income category?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(gss$college, gss$finrela)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           \n            far below average below average average above average\n  no degree                21            81     165            52\n  degree                    4            34      74            54\n           \n            far above average  DK\n  no degree                 2   5\n  degree                    8   0\n```\n\n\n:::\n:::\n\n\n## Bar charts for two categorical vars\n\n::: columns\n::: {.column width=\"50%\"}\n::: incremental\n-   Example: How is the probability of obtaining a college degree related to self-identified income category?\n-   Stacked bar chart: Good at showing the overall distribution. We can see that most people think their income is average.\n:::\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gss, \n       aes(x = finrela, fill = college)) + \n  geom_bar() + \n  labs(x = \"Relative family income\",\n       y = \"\")\n```\n\n::: {.cell-output-display}\n![](16-hypothesistests4_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## Bar charts for two categorical vars\n\n::: columns\n::: {.column width=\"50%\"}\n-   Example: How is the probability of obtaining a college degree related to self-identified income category?\n\n::: incremental\n-   Dodged bar chart: Good at showing the distributions of the two groups next to each other. Now we can see that there are fewer people with degrees.\n:::\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gss, \n       aes(x = finrela, fill = college)) + \n  # the \"position\" argument here \n  # is what is changing\n  geom_bar(position = \"dodge\") +\n  labs(x = \"Relative family income\",\n       y = \"\")\n```\n\n::: {.cell-output-display}\n![](16-hypothesistests4_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## Bar charts for two categorical vars\n\n::: columns\n::: {.column width=\"50%\"}\n-   Example: How is the probability of obtaining a college degree related to self-identified income category?\n\n::: incremental\n-   Proportion bar chart: Good at comparing the compositions of the bars. We lose information on the distribution as a whole, but we gain information on whether people from both groups are evenly distributed between income classes.\n:::\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gss, \n       aes(x = finrela, fill = college)) + \n  # the \"position\" argument here \n  # is what is changing\n  geom_bar(position = \"fill\") +\n  labs(x = \"Relative family income\",\n       y = \"\")\n```\n\n::: {.cell-output-display}\n![](16-hypothesistests4_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## Answers for exercise Q3\n\n-   How is someone's gender identity related to their probability of being married?\n\n# Where we're at with hypothesis testing\n\n## There are many types of tests\n\n![](images/16/test_table_nologit.png)\n\n## But the steps to run them are the same\n\n1.  Calculate the test statistic of your sample\n\n    -   with `specify()` (telling R what your variables are),\n    -   then `hypothesize()` (telling R what kind of null hypothesis you have),\n    -   then `calculate()` (calculating your test statistic)\n\n2.  Simulate the null distribution\n\n    -   exactly the same code as step 1, but with an added `generate()` step\n    -   here you are simulating pulling a bunch of samples from your null population in order to figure out what the null distribution of sample statistics would look like\n\n3.  Calculate the p value of your sample\n\n    -   with your null distribution, your test statistic, and `get_p_value()`\n\n4.  Visualize the test statistic of your sample alongside the null distribution\n\n    -   with `visualize()` and `shade_p_value()`\n\n## In code form:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Calculate test statistic\ntest_stat <- XXXX |> \n  specify(explanatory = XXXX,\n          response = XXXX) |> \n  hypothesize(null = \"independence\") |> \n  calculate(stat = XXXX)\n\n# 2. Simulate null distribution\nnull_dist <- XXXX |> \n  specify(explanatory = XXXX,\n          response = XXXX) |> \n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000) |>\n  calculate(stat = XXXX)\n\n# 3. Use both to get the p value\nget_p_value(null_dist,\n            obs_stat = test_stat,\n            direction = XXXX)\n\n# 4. Visualize it!\nvisualize(null_dist) +\n  shade_p_value(obs_stat = test_stat,\n                direction = XXXX)\n```\n:::\n\n\n# What are the different tests testing?\n\n## Different tests: an overview\n\n-   We'll be covering 5 specific hypothesis tests (all except logistic regression)\n\n    -   Two sample Z test\n    -   Two sample T test\n    -   Chi square test of independence\n    -   Analysis of Variance (ANOVA)\n    -   Linear regression\n\n. . .\n\n-   There is a relationship between the descriptive plots you've been working with and the different test types!\n\n## Two sample Z test\n\n-   Explanatory: categorical with two categories\n-   Response: categorical with two categories\n-   Testing for: Difference in group proportions!\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](16-hypothesistests4_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n## Two sample T test\n\n-   Explanatory: categorical with two categories\n-   Response: numeric\n-   Testing for: Difference in group means!\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](16-hypothesistests4_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n## Chi square test of independence\n\n-   Explanatory: categorical with any number of categories\n-   Response: categorical with any number of categories\n-   Testing for: Patterns in how observations are distributed between groups!\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](16-hypothesistests4_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n## Chi square test of independence\n\n-   Explanatory: categorical with any number of categories\n-   Response: categorical with any number of categories\n-   Testing for: Patterns in how observations are distributed between groups!\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](16-hypothesistests4_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n## Analysis of Variance (ANOVA)\n\n-   Explanatory: categorical with three or more categories\n-   Response: numeric\n-   Testing for: Differences in means between more groups!\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](16-hypothesistests4_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n## Linear regression\n\n-   Explanatory: numeric or multiple variables\n-   Response: numeric\n-   Testing for: Non-zero slopes!\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](16-hypothesistests4_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n# What's the math difference?\n\n## What's the math difference?\n\n-   Mainly, the shape of the test statistic distribution.\n-   We account for this in two places:\n    -   the `stat` argument in `calculate()`\n    -   the `direction` argument in `get_p_value()` and `visualize()`\n\n\n::: {.cell}\n\n:::\n\n\n## Normal and nearly normal distributions\n\n-   Normal: Two sample Z test, linear regression slope test\n-   Nearly normal (t distribution): Two sample T test\n-   Symmetrical; centered at 0; bell-shaped\n-   Either one-tailed or two-tailed tests make sense\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](16-hypothesistests4_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n## Asymmetrical distributions\n\n-   Chi-square test: chi square distribution\n-   Analysis of Variance (ANOVA): F distribution\n-   These values can be thought of as *distances*\n-   Strictly positive; asymmetrical and long-tailed\n-   \"More extreme\" means further away---ie, more positive. So all tests are one-tailed.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](16-hypothesistests4_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n## Different tests: summary\n\n| **Test**          | **stat = XXXX** | **direction = XXXX**  | **Notes**                                                                                        |\n|-------------------|-----------------|-----------------------|--------------------------------------------------------------------------------------------------|\n| Two sample Z test | `\"z\"`           | usually `\"two-sided\"` | Needs `success = XXXX` in `specify()`, where XXXX is one of the options of the response variable |\n| Two sample T test | `\"t\"`           | usually `\"two-sided\"` |                                                                                                  |\n| Chi square test   | `\"Chisq\"`       | `\"greater\"`           |                                                                                                  |\n| ANOVA             | `\"F\"`           | `\"greater\"`           | `hypothesize()` optional for test statistic                                                      |\n| Linear regression | `\"slope\"`       | usually `\"two-sided\"` | `hypothesize()` optional for test statistic                                                      |\n\n## Example\n\n-   How is self-perceived relative family income associated with probability of receiving a college degree?\n\n. . .\n\n-   **Explanatory**: Self-perceived relative family income. Three or more category categorical.\n-   **Response**: Whether or not someone received a college degree. Two-category categorical.\n\n. . .\n\n-   **Null hypothesis**: There is no relationship between self-perceived relative family income and probability of receiving a college degree.\n-   **Alternative hypothesis**: There is a relationship between self-perceived relative family income and probability of receiving a college degree.\n\n## Example\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gss, aes(x = finrela, fill = college)) + \n  geom_bar(position = \"fill\")\n```\n\n::: {.cell-output-display}\n![](16-hypothesistests4_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n\n## Chi square example\n\n::: incremental\n-   Correct test: Chi square\n:::\n\n![](images/14/test_table.png)\n\n## Chi square example\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Calculate test statistic\ntest_stat <- gss |> \n  specify(explanatory = finrela,\n          response = college) |> \n  hypothesize(null = \"independence\") |> \n  calculate(stat = \"Chisq\")       # calculate the Chi square statistic\n```\n:::\n\n\n## Chi square example\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Calculate test statistic\ntest_stat <- gss |> \n  specify(explanatory = finrela,\n          response = college) |> \n  hypothesize(null = \"independence\") |> \n  calculate(stat = \"Chisq\")       # calculate the Chi square statistic\n\n# 2. Simulate null distribution\nnull_dist <- gss |> \n  specify(explanatory = finrela,\n          response = college) |> \n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000) |>\n  calculate(stat = \"Chisq\")\n```\n:::\n\n\n## Chi square example\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Calculate test statistic\ntest_stat <- gss |> \n  specify(explanatory = finrela,\n          response = college) |> \n  hypothesize(null = \"independence\") |> \n  calculate(stat = \"Chisq\")       # calculate the Chi square statistic\n\n# 2. Simulate null distribution\nnull_dist <- gss |> \n  specify(explanatory = finrela,\n          response = college) |> \n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000) |>\n  calculate(stat = \"Chisq\")\n\n# 3. Use both to get the p value\nget_p_value(null_dist,\n            obs_stat = test_stat,\n            direction = \"greater\") # we want the probability of a statistic larger than what we calculated\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  p_value\n    <dbl>\n1       0\n```\n\n\n:::\n:::\n\n\n## Chi square example\n\n-   Do we reject or fail to reject our null hypothesis?\n-   What can we conclude about our research question?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 4. Visualize it!\nvisualize(null_dist) +\n  shade_p_value(obs_stat = test_stat,\n                direction = \"greater\")\n```\n\n::: {.cell-output-display}\n![](16-hypothesistests4_files/figure-revealjs/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n",
    "supporting": [
      "16-hypothesistests4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}