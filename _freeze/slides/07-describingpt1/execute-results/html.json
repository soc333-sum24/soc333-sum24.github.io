{
  "hash": "bc572663baadde19f5d15b2e0684d039",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Describing data: part 1\"\nsubtitle: \"Lecture 7\"\ndate: \"May 28 2024\"\nformat: revealjs\n---\n\n\n## Logistics {.smaller}\n\n-   Final project proposals due tonight\n\n    -   Update your first draft: incorporate useful peer feedback\n    -   Don't forget to add the last paragraph about what question you think you should go with\n    -   Any last questions?\n\n. . .\n\n-   Late work policy\n\n    -   You have 3 no-questions-asked late days to use through the semester\n    -   Applies to project components and assignments (except final paper and presentation--I can't extend those)\n\n## Today\n\n-   Data analysis process\n-   Univariate summaries: what do my variables look like?\n\n## The (approximate) data analysis process {.smaller}\n\n::: columns\n::: incremental\n-   Determine topic\n-   Find data; learn what observations and variables are available\n-   Write research question\n-   Describe distributions of relevant variables\n-   Prepare data frame for analysis\n-   Describe relationships between variables\n-   Perform statistical tests/write models\n-   Communicate results\n:::\n:::\n\n## The (approximate) data analysis process {.smaller}\n\n-   Determine topic ✓\n-   Find data; learn what observations and variables are available ✓\n-   Write research question ✓\n-   Describe distributions of relevant variables\n-   Prepare data frame for analysis\n-   Describe relationships between variables\n-   Perform statistical tests/write models\n-   Communicate results\n\n## The (approximate) data analysis process {.smaller}\n\n-   Determine topic ✓\n-   Find data; learn what observations and variables are available ✓\n-   Write research question ✓\n-   **Describe distributions of relevant variables**\n-   **Prepare data frame for analysis**\n-   **Describe relationships between variables**\n-   Perform statistical tests/write models\n-   Communicate results\n\n## Project component 2: Descriptive statistics\n\nGoals:\n\n::: incremental\n-   Understand how your variables are distributed in your data\n\n-   Make any necessary modifications to your data frame\n\n    -   Remove irrelevant observations\n    -   Modify or create variables as necessary\n\n-   Describe the relationships between your variables\n:::\n\n# Understanding how your variables are distributed\n\n\n\n\n\n## Today: With numbers (later: with plots)\n\n-   Summary statistics\n-   What makes sense depends on variable type\n\n## R syntax for today {.smaller}\n\n-   To access specific variables: `dataframe$variable`\n-   Functions do things with variables/other inputs: `do_this(with_this)`\n-   We can save results as *objects* to use later with `<-`: `an_object_name <- some_function(some_input)`\n    -   eg: `meanvalue <- mean(dataframe$variable)`\n\n## Data set 1 for today: EADA data on sports teams {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(sports)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 879\nColumns: 8\n$ school             <chr> \"Duke\", \"Duke\", \"Duke\", \"Duke\", \"Duke\", \"Duke\", \"Du…\n$ year               <dbl> 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 200…\n$ division           <chr> \"NCAA Division I-A\", \"NCAA Division I-A\", \"NCAA Div…\n$ teamgender         <chr> \"men\", \"men\", \"men\", \"men\", \"men\", \"men\", \"men\", \"m…\n$ sport              <chr> \"Baseball\", \"Basketball\", \"Fencing\", \"Football\", \"G…\n$ ncoaches           <dbl> 3, 4, 1, 10, 2, 3, 3, 2, 2, 3, 3, 4, 4, 8, 6, 13, 2…\n$ nplayers           <dbl> 33, 15, 19, 81, 12, 45, 23, 32, 11, 50, 35, 35, 30,…\n$ player_coach_ratio <dbl> 11.000000, 3.750000, 19.000000, 8.100000, 6.000000,…\n```\n\n\n:::\n:::\n\n\n## Before we dive in: an intro to missing data\n\n::: incremental\n-   Sometimes not everyone answers every question or data is not available for a specific observation\n-   Creates `NA` values in your data frame\n-   Check for them--they can create unexpected results otherwise\n:::\n\n# Categorical variables\n\n## Categorical: What are the options? {.smaller}\n\n-   `unique()`\n\n::: fragment\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(sports$school)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Duke\" \"UNC\" \n```\n\n\n:::\n:::\n\n:::\n\n::: fragment\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(sports$sport)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Baseball\"                  \"Basketball\"               \n [3] \"Fencing\"                   \"Football\"                 \n [5] \"Golf\"                      \"Lacrosse\"                 \n [7] \"Soccer\"                    \"Swimming and Diving\"      \n [9] \"Tennis\"                    \"Track and Field X Country\"\n[11] \"Wrestling\"                 \"All Track Combined\"       \n[13] \"Field Hockey\"              \"Rowing\"                   \n[15] \"Volleyball\"                \"Gymnastics\"               \n[17] \"Softball\"                 \n```\n\n\n:::\n:::\n\n:::\n\n## Categorical: counts for one variable\n\n-   Counts: `table()`\n\n    -   `useNA = \"always\"` tells R to let you know if there is any missing data on your variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(sports$school, useNA = \"always\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nDuke  UNC <NA> \n 423  456    0 \n```\n\n\n:::\n:::\n\n\n## Categorical: counts for two variables\n\n-   Still `table()`, but use two variables as arguments\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(sports$teamgender, sports$school, useNA = \"always\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       \n        Duke UNC <NA>\n  men    209 209    0\n  women  214 247    0\n  <NA>     0   0    0\n```\n\n\n:::\n:::\n\n\n## Exercise {.smaller}\n\n-   Today's exercise: in R! Clone and open the project repo now (**ex-5-28-yourusername**)\n\n    -   [Instructions: Computing -\\> Cloning and committing](https://soc333-sum24.github.io/computing-clonerepo.html)\n\n-   Data: American Community Survey 2012\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(acs12)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2,000\nColumns: 13\n$ income       <int> 60000, 0, NA, 0, 0, 1700, NA, NA, NA, 45000, NA, 8600, 0,…\n$ employment   <fct> not in labor force, not in labor force, NA, not in labor …\n$ hrs_work     <int> 40, NA, NA, NA, NA, 40, NA, NA, NA, 84, NA, 23, NA, NA, N…\n$ race         <fct> white, white, white, white, white, other, white, other, a…\n$ age          <int> 68, 88, 12, 17, 77, 35, 11, 7, 6, 27, 8, 69, 69, 17, 10, …\n$ gender       <fct> female, male, female, male, female, female, male, male, m…\n$ citizen      <fct> yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, ye…\n$ time_to_work <int> NA, NA, NA, NA, NA, 15, NA, NA, NA, 40, NA, 5, NA, NA, NA…\n$ lang         <fct> english, english, english, other, other, other, english, …\n$ married      <fct> no, no, no, no, no, yes, no, no, no, yes, no, no, yes, no…\n$ edu          <fct> college, hs or lower, hs or lower, hs or lower, hs or low…\n$ disability   <fct> no, yes, no, no, yes, yes, no, yes, no, no, no, no, yes, …\n$ birth_qrtr   <fct> jul thru sep, jan thru mar, oct thru dec, oct thru dec, j…\n```\n\n\n:::\n:::\n\n\n## Question 1 solutions {.smaller}\n\nResponse options for the employment variable\n\n::: fragment\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(acs12$employment)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] not in labor force <NA>               employed           unemployed        \nLevels: not in labor force unemployed employed\n```\n\n\n:::\n:::\n\n:::\n\n## Question 1 solutions {.smaller}\n\nHow many people are in each category? How many missing values are there?\n\n::: fragment\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(acs12$employment, useNA = \"always\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nnot in labor force         unemployed           employed               <NA> \n               656                106                843                395 \n```\n\n\n:::\n:::\n\n:::\n\n## Question 1 solutions {.smaller}\n\nCreate a table that shows the number of people of each gender in each employment category.\n\n::: fragment\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(acs12$gender, acs12$employment, useNA = \"always\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        \n         not in labor force unemployed employed <NA>\n  male                  283         59      470  219\n  female                373         47      373  176\n  <NA>                    0          0        0    0\n```\n\n\n:::\n:::\n\n:::\n\n::: fragment\nDoes it look like gender and employment status are related?\n:::\n\n# Numeric variables\n\n## Numeric: All about distributions!\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07-describingpt1_files/figure-revealjs/unnamed-chunk-11-1.png){width=480}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07-describingpt1_files/figure-revealjs/unnamed-chunk-12-1.png){width=480}\n:::\n:::\n\n:::\n:::\n\n## Summarizing a distribution\n\n::: columns\n::: {.column width=\"50%\"}\n::: incremental\n-   Center\n-   Spread\n-   Shape\n:::\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07-describingpt1_files/figure-revealjs/unnamed-chunk-13-1.png){width=480}\n:::\n:::\n\n:::\n:::\n\n## Center: Mean\n\nSay we measure heights of 7 people (in inches):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheights <- c(67, 70, 80, 61, 70, 71, 62)\n```\n:::\n\n\n::: incremental\n-   aka the average\n-   Add everything together and divide by the number of values: (66 + 70 + 80 + 62 + 68 + 71 + 62)/7 = 68.7\n-   `mean()`\n:::\n\n::: fragment\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(heights)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 68.71429\n```\n\n\n:::\n:::\n\n:::\n\n## Center: Median\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheights\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 67 70 80 61 70 71 62\n```\n\n\n:::\n:::\n\n\n::: incremental\n-   The middle value\n-   Order the values least to greatest, select the one in the middle\n-   61, 62, 67, **70**, 70, 71, 80\n-   `median()`\n:::\n\n::: fragment\n\n::: {.cell}\n\n```{.r .cell-code}\nmedian(heights)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 70\n```\n\n\n:::\n:::\n\n:::\n\n## Spread: minimum and maximum\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmin(heights)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 61\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmax(heights)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 80\n```\n\n\n:::\n:::\n\n\n## Spread: quartiles {.smaller}\n\n-   **percentiles**\n-   lowest 1/4 of your data is below the 25th percentile, lowest 1/2 below 50%, etc\n-   Calculated similarly to the median\n-   `quantile()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquantile(heights)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  0%  25%  50%  75% 100% \n61.0 64.5 70.0 70.5 80.0 \n```\n\n\n:::\n:::\n\n\n## Spread: standard deviation {.smaller}\n\n-   Measure of degree of variation in data: bigger standard deviation = more variation\n-   Used to establish statistical significance--we'll come back to this later\n-   `sd()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheights_moresimilar <- c(60, 63, 62, 60, 61, 61, 64)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nheights\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 67 70 80 61 70 71 62\n```\n\n\n:::\n\n```{.r .cell-code}\nheights_moresimilar\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 60 63 62 60 61 61 64\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsd(heights)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 6.369571\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsd(heights_moresimilar)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.511858\n```\n\n\n:::\n:::\n\n\n## summary(): (almost) everything all at once\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(sports$nplayers)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   5.00   15.00   28.00   35.63   40.00  148.00 \n```\n\n\n:::\n:::\n\n\n## Summary statistics functions and missing values {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(acs12$income)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] NA\n```\n\n\n:::\n:::\n\n\n-   NA! What!\n\n::: incremental\n-   Summary statistics functions will return NA if any of the observations are missing information for the variable\n-   Always check for missing data!\n-   Use the `na.rm = TRUE` option to tell the function to ignore the NA values.\n:::\n\n::: fragment\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(acs12$income)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n      0       0    3000   23600   33700  450000     377 \n```\n\n\n:::\n:::\n\n:::\n\n::: fragment\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(acs12$income, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 23599.98\n```\n\n\n:::\n:::\n\n:::\n",
    "supporting": [
      "07-describingpt1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}